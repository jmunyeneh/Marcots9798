// <auto-generated />
using System;
using MarcotsContactApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MarcotsContactApp.Migrations
{
    [DbContext(typeof(MarcotsContext))]
    [Migration("20200516222611_0200516052925_contactStatusRemove")]
    partial class _0200516052925_contactStatusRemove
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MarcotsContactApp.Models.Adddress", b =>
                {
                    b.Property<int>("AddrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AddrID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("AddrId");

                    b.ToTable("Adddress");
                });

            modelBuilder.Entity("MarcotsContactApp.Models.Days", b =>
                {
                    b.Property<int>("DayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DayID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DayNum")
                        .HasColumnType("int");

                    b.HasKey("DayId");

                    b.ToTable("Days");
                });

            modelBuilder.Entity("MarcotsContactApp.Models.FamAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddrId")
                        .HasColumnName("AddrID")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnName("PersonID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddrId");

                    b.HasIndex("PersonId");

                    b.ToTable("FamAddress");
                });

            modelBuilder.Entity("MarcotsContactApp.Models.FamilyPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PersonId")
                        .HasColumnName("PersonID")
                        .HasColumnType("int");

                    b.Property<int?>("PhotoId")
                        .HasColumnName("PhotoID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("PhotoId");

                    b.ToTable("FamilyPhoto");
                });

            modelBuilder.Entity("MarcotsContactApp.Models.MarStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("MarStatus");
                });

            modelBuilder.Entity("MarcotsContactApp.Models.Months", b =>
                {
                    b.Property<int>("MonthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MonthID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MonthName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("MonthId");

                    b.ToTable("Months");
                });

            modelBuilder.Entity("MarcotsContactApp.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PersonID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BirthDay")
                        .HasColumnType("int");

                    b.Property<int?>("BirthMonth")
                        .HasColumnType("int");

                    b.Property<int>("ContactStatus")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("InsertedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Kids")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MidName")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("OwnerId")
                        .HasColumnName("OwnerID")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("StatusId")
                        .HasColumnName("StatusID")
                        .HasColumnType("int");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(14)")
                        .HasMaxLength(14);

                    b.HasKey("PersonId");

                    b.HasIndex("BirthDay");

                    b.HasIndex("BirthMonth");

                    b.HasIndex("StatusId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("MarcotsContactApp.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool?>("MyPicture")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Photo");
                });

            modelBuilder.Entity("MarcotsContactApp.Models.FamAddress", b =>
                {
                    b.HasOne("MarcotsContactApp.Models.Adddress", "Addr")
                        .WithMany("FamAddress")
                        .HasForeignKey("AddrId")
                        .HasConstraintName("FK_FamAddress_Adddress")
                        .IsRequired();

                    b.HasOne("MarcotsContactApp.Models.Person", "Person")
                        .WithMany("FamAddress")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("FK_FamAddress_Person")
                        .IsRequired();
                });

            modelBuilder.Entity("MarcotsContactApp.Models.FamilyPhoto", b =>
                {
                    b.HasOne("MarcotsContactApp.Models.Person", "Person")
                        .WithMany("FamilyPhoto")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("FK_FamilyPhoto_Person");

                    b.HasOne("MarcotsContactApp.Models.Photo", "Photo")
                        .WithMany("FamilyPhoto")
                        .HasForeignKey("PhotoId")
                        .HasConstraintName("FK_FamilyPhoto_Photo");
                });

            modelBuilder.Entity("MarcotsContactApp.Models.Person", b =>
                {
                    b.HasOne("MarcotsContactApp.Models.Days", "BirthDayNavigation")
                        .WithMany("Person")
                        .HasForeignKey("BirthDay")
                        .HasConstraintName("FK_Person_Days");

                    b.HasOne("MarcotsContactApp.Models.Months", "BirthMonthNavigation")
                        .WithMany("Person")
                        .HasForeignKey("BirthMonth")
                        .HasConstraintName("FK_Person_Months");

                    b.HasOne("MarcotsContactApp.Models.MarStatus", "Status")
                        .WithMany("Person")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_Person_MarStatus");
                });
#pragma warning restore 612, 618
        }
    }
}
